@model TrouveUnBand.Models.Advert

@{
    ViewBag.Title = "Création d'annonces";
}

@if (User.Identity.Name == "")
{
    <h3>Veuillez vous identifier svp</h3>
}
else
{
    using (Html.BeginForm("Create", "Advert", FormMethod.Post, new { @role = "form", enctype = "multipart/form-data" }))
    {
        <div  id="CreateEventForm">
            <div class="container">
                <div class="row form-group col-md-8 col-md-push-2">
                    <div class="col-md-12">
                        <h3>Créer une annonce</h3>
                        <hr class="colorgraph">
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Label("Photo de l'annonce")
                        <input id="ImageUploader" class="btn" type="file" name="FileUpload" value="Choisir Fichier" accept="image/*" />
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Hidden("CreatorName", User.Identity.Name)
                        <div class="form-group col-md-12">
                            @Html.TextBoxFor(model => model.Type,
                                new { @class = "form-control", @placeholder = "Nom de l'annonce" })
                            @Html.ValidationMessageFor(model => model.Type)
                        </div>
                        <div class="form-group col-md-6">
                            @Html.TextBoxFor(model => model.Location,
                                new { @class = "form-control", @placeholder = "Emplacement" })
                            @Html.ValidationMessageFor(model => model.Location)
                        </div>
                        <div class="form-group col-md-6">
                            <div class="btn-group bootstrap-select form-control selectpicker-over">
                                <button title="Status" data-id="Gender" type="button" class="btn dropdown-toggle selectpicker btn-default" data-toggle="dropdown">
                                    <span class="filter-option pull-left">Statut de la demande</span>&nbsp;<span class="caret"></span>
                                </button>
                            </div>
                                @Html.DropDownListFor(model => model.Status, new SelectList(
                                          new List<Object>{
                                               new { value = "En attente" , text = "En attente"  },
                                               new { value = "En cours" , text = "En cours" }
                                            },"value","text", 1), 
                                          "Statut de la demande", new { @class = "form-control selectpicker hidden" })
                            @Html.ValidationMessageFor(model => model.Status)
                        </div>

                        <div class="form-group col-md-6">
                            @Html.TextBoxFor(model => model.ExpirationDate,
                                new { @class = "form-control", @placeholder = "Date d'expiration de l'annonce", @id = "datepickernotime2", @type = "date" })
                            @Html.ValidationMessageFor(model => model.ExpirationDate)
                        </div>
                        <div class="form-group col-md-6">
                            <div class="btn-group bootstrap-select form-control selectpicker-over">
                                <button title="Sexe" data-id="Gender" type="button" class="btn dropdown-toggle selectpicker btn-default" data-toggle="dropdown">
                                    <span class="filter-option pull-left">Genres musicaux de l'annonce</span>&nbsp;<span class="caret"></span>
                                </button>
                            </div>
                            <select name="GenreAdvertDB" class="selectpicker hidden" title="Genres musicaux de l'annonce"
                                    data-width="100%" data-live-search="true"
                                    data-selected-text-format="count>3" multiple>
                                @foreach (var genre in ViewBag.GenreListDB)
                                {
                                    <option>@genre.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-12">
                            @Html.TextAreaFor(model => model.Description,
                                new { @class = "form-control", @placeholder = "Description" })
                            @Html.ValidationMessageFor(model => model.Description)
                        </div>
                        <div class="col-md-12">
                            <hr class="colorgraph"/>
                        </div>
                        <div class="col-md-6">
                             @Html.ActionLink("Retour", "Index", new { controller = "Advert" }, 
                                new { @class = "btn btn-default col-md-12" })
                        </div>
                        <div class="col-md-6">
                            <input type="submit" value="Créer l'annonce" class="btn btn-primary col-md-12" />
                        </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="CropperDialog" data-send="false">
                @RenderPage("../Photo/ImageCropperDialog.cshtml")
                @Html.HiddenFor(model => model.PhotoCrop.PicX, new { id = "X" })
                @Html.HiddenFor(model => model.PhotoCrop.PicY, new { id = "Y" })
                @Html.HiddenFor(model => model.PhotoCrop.PicWidth, new { id = "Width" })
                @Html.HiddenFor(model => model.PhotoCrop.PicHeight, new { id = "Height" })
                
            </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
