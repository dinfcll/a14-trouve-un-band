@model TrouveUnBand.Models.Event

@{
    ViewBag.Title = "Création d'événement";
}

@if (User.Identity.Name == "")
{
    <h3>Veuillez vous identifier svp</h3>
}
else
{
    using (Html.BeginForm("Create", "Event", FormMethod.Post, new { @role = "form", enctype = "multipart/form-data" }))
    {
        <div id="CreateEventForm">
            <div class="container">
                <div class="row form-group col-md-8 col-md-push-2">
                    <div class="col-md-12">
                        <h3>Créer un événement</h3>
                        <hr class="colorgraph">
                    </div>
                    <h4 class="col-md-12">Photo de l'événement (facultatif)</h4>

                    <div class="form-group file-uploader col-md-12">
                        <div class="btn btn-default photo-upload-browser col-md-6">
                            <span class="glyphicon glyphicon-folder-open"></span>
                            <span class="image-upload-input-title">Choisir une photo dans vos dossiers</span>
                            <input id="ImageUploader" type="file" accept="image/*" name="photo-upload-browser" />
                        </div>
                    </div>

                    @Html.ValidationSummary(true)

                    @Html.Hidden("Creator", User.Identity.Name)

                    <h4 class="col-md-12">Informations de l'événement</h4>

                    <div class="form-group col-md-6">
                        @Html.TextBoxFor(model => model.Name,
                            new { @class = "form-control", @placeholder = "Nom de l'événement" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>

                    <div class="form-group col-md-6">
                        @Html.TextBoxFor(model => model.Location,
                            new { @class = "form-control", @placeholder = "Emplacement de l'événement" })
                        @Html.ValidationMessageFor(model => model.Location)
                    </div>

                    <div class="form-group col-md-12">
                        @Html.TextBoxFor(model => model.Address,
                            new { @class = "form-control", @placeholder = "Adresse de l'emplacement" })
                        @Html.ValidationMessageFor(model => model.Address)
                    </div>

                    <div class="form-group col-md-12">
                        @Html.TextBoxFor(model => model.City,
                            new { @class = "form-control", @placeholder = "Ville de l'emplacement" })
                        @Html.ValidationMessageFor(model => model.City)
                    </div>

                    <div class="form-group col-md-12">
                        @Html.TextBoxFor(model => model.Description,
                            new { @class = "form-control", @placeholder = "Description" })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>

                    <div class="form-group col-md-12">
                        @Html.TextBoxFor(model => model.EventDate,
                            new { @class = "form-control", @placeholder = "Date de l'événement", @id = "datepicker" })
                        @Html.ValidationMessageFor(model => model.EventDate)
                    </div>
                    <div class="form-group col-md-6">
                        @Html.TextBoxFor(model => model.MaxAudience,
                            new { @class = "form-control", @placeholder = "Audience maximale" })
                        @Html.ValidationMessageFor(model => model.MaxAudience)
                    </div>

                    <div class="form-group col-md-6">
                        @Html.TextBoxFor(model => model.Salary,
                            new { @class = "form-control", @placeholder = "Salaire pour l'événement ($)" })
                        @Html.ValidationMessageFor(model => model.Salary)
                    </div>
                    <div class="form-group col-md-6">
                        @Html.TextBoxFor(model => model.StageSize, 
                            new { @class = "form-control", @placeholder = "Dimension de la scène (P, M ou L)" })
                        @Html.ValidationMessageFor(model => model.StageSize)
                    </div>
                    <div class="form-group col-md-6">
                        <div class="btn-group bootstrap-select form-control selectpicker-over">
                            <button title="Sexe" data-id="Gender" type="button" class="btn dropdown-toggle selectpicker btn-default" data-toggle="dropdown">
                                <span class="filter-option pull-left">Genres musicaux de l'événement</span>&nbsp;<span class="caret"></span>
                            </button>
                        </div>
                        <select name="EventGenreDB" class="selectpicker form-control hidden" title="Genres musicaux de l'événement"
                                data-width="100%" data-live-search="true"
                                data-selected-text-format="count>3" multiple>
                            @foreach (var genre in ViewBag.GenreListDB)
                            {
                                <option>@genre.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <select name="BandsListDB" class="selectpicker form-control" title="Groupe(s) à l'événement"
                                data-width="100%" data-live-search="true"
                                data-selected-text-format="count>3" multiple>
                            @foreach (var band in ViewBag.BandsListDB)
                            {
                                <option>@band.Name</option>
                            }
                        </select>
                    </div>
                    
                    <div class="col-md-12">
                        <hr class="colorgraph" />
                    </div>

                    <div class="col-md-6">
                        @Html.ActionLink("Retour", "Index", new { controller = "Event" },
                            new { @class = "btn btn-default col-md-12" })
                    </div>

                    <div class="col-md-6">
                        <input type="submit" value="Créer l'événement" class="btn btn-primary col-md-12" />
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="CropperDialog" data-send="false">
            @RenderPage("../Photo/ImageCropperDialog.cshtml")
            @Html.HiddenFor(model => model.PhotoCrop.PicX, new { id = "X" })
            @Html.HiddenFor(model => model.PhotoCrop.PicY, new { id = "Y" })
            @Html.HiddenFor(model => model.PhotoCrop.PicWidth, new { id = "Width" })
            @Html.HiddenFor(model => model.PhotoCrop.PicHeight, new { id = "Height" })
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
