@model TrouveUnBand.Models.User
<div class="row pad-top-30">
    @using (Html.BeginForm("CropImage", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        var photo = "data:image/jpeg;base64," + Convert.ToBase64String(Model.Photo);
        @Html.AntiForgeryToken()
        <div class="col-md-4">
            <div class="row col-md-offset-2">
                @Html.Label("Photo de Profil")
            </div>
            <a class="btn btn-primary btn-lg" data-toggle="modal" data-target="#PicModal">
                <img id="ProfilePic" alt="" src="@photo" width="350" class="photo" />
            </a>
            <input id="ImageUploader" class="btn" type="file" name="FileUpload" accept="image/*" />
            <div class="modal fade" id="PicModal" tabindex="-1" role="dialog" aria-labelledby="PicModalLabel"
                aria-hidden="true">
                @Html.Partial("../Photo/ViewPictureDialog")
            </div>
        </div>
        <div class="modal fade" id="CropperDialog">
            @RenderPage("../Photo/ImageCropperDialog.cshtml")
        </div>
    }
    @using (Html.BeginForm("UserProfileModification", "Users", FormMethod.Post, new { @class = "row", @role = "form" }))
    {
        <div class="pad-top-10">
            @Html.HiddenFor(model => model.User_ID, new { @class = "form-control", @Value = Model.User_ID })
            <div class="form-group col-md-3 col-md-push-1">
                @Html.Label("PrÃ©nom:")
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @Value = Model.FirstName })
                @Html.ValidationMessage("FirstName")
            </div>
            <div class="form-group col-md-3 col-md-push-1">
                @Html.Label("Nom de famille:")
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @Value = Model.LastName })
                @Html.ValidationMessage("LastName")
            </div>
            <div class="form-group col-md-3 col-md-push-1">
                @Html.Label("Date de naissance:")
                @Html.TextBoxFor(model => model.BirthDate, new { @class = "form-control", @Value = Model.BirthDate.ToString("yyyy/MM/dd"),@id = "datepickernotime", @type = "date"  })
                @Html.ValidationMessage("BirthDate")
            </div>
            <div class="form-group col-md-3 col-md-push-1">
                @Html.Label("Sexe:")
                @Html.DropDownListFor(model => model.Gender,
                                      new SelectList(
                                          new List<Object>{
                                              new { value = "Homme" , text = "Homme" },
                                              new { value = "Femme" , text = "Femme" },
                                            },
                                      "value",
                                      "text", Model.Gender), new { @class = "form-control" })
            </div>
            <div class="form-group col-md-3 col-md-push-1">
                @Html.Label("Ville:")
                @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @Value = Model.Location })
                @Html.ValidationMessage("Location")
            </div>
            <div class="form-group col-md-3 col-md-push-1">
                @Html.Label("Courriel:")
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @Value = Model.Email })
                @Html.ValidationMessage("Email")
            </div>
            <div class="pad-top-30 form-group col-md-3 margin-left-0 col-md-push-1">
                <input type="button" class="btn btn-default" value="Annuler" onclick="annuler()" />
            </div>
            <div class="pad-top-30 form-group col-md-3 margin-left-0 col-md-pull-1">
                <input type="submit" class="btn btn-primary" value="Enregistrer les Modifications" />
            </div>
        </div>
    }
</div>
